{"id":"user/00000000-000-NOT-VALID-a29b6679bb3c/category/global.uncategorized","updated":0,"items":[{"id":"55jQyVFBayOwBJQ5qCX8DsgTPumTnzjw6LozTAKPiWA=_13fce8fa561:a89090:60f5fbac","originId":"74954 at https://www.eff.org","fingerprint":"ee3e5b9b","title":"Reform the FISA Court: Privacy Law Should Never Be Radically Reinterpreted in Secret","published":1373492532000,"crawled":1373560087905,"alternate":[{"href":"https://www.eff.org/deeplinks/2013/07/fisa-court-has-been-radically-reinterpreting-privacy-law-secret","type":"text/html"}],"author":"Trevor Timm","origin":{"htmlUrl":"https://www.eff.org/rss/updates.xml","streamId":"feed/https://www.eff.org/rss/updates.xml","title":"Deeplinks"},"summary":{"content":"<div><div><div><p>Since the <i>Guardian</i> and <i>Washington Post</i> started published secret NSA documents a month ago, the press has finally started digging into the operations of ultra-secretive Foreign Intelligence Surveillance Act (FISA) court, which is partly responsible for the veneer of legality painted onto the NSA’s domestic surveillance programs. The new reports are quite disturbing to anyone who cares about the Fourth Amendment, and they only underscore the need for major reform.\n<p>As the <i>New York Times</i> <a href=\"https://www.nytimes.com/2013/07/07/us/in-secret-court-vastly-broadens-powers-of-nsa.html?_r=0&pagewanted=all\">reported on its front page</a> on Sunday, “In more than a dozen classified rulings, the nation’s surveillance court has created a secret body of law giving the <a title=\"More articles about National Security Agency, U.S.\" href=\"http://topics.nytimes.com/top/reference/timestopics/organizations/n/national_security_agency/index.html?inline=nyt-org\">National Security Agency</a> the power to amass vast collections of data on Americans.” The court, which was originally set up to just approve or deny wiretap requests now “has taken on a much more expansive role by regularly assessing broad constitutional questions and establishing important judicial precedents,” with no opposing counsel to offer counter arguments to the government, and rulings that cannot be appealed outside its secret structure. “It has quietly become almost a parallel Supreme Court,” reported the <i>Times</i>.\n<p><i>The Wall Street Journal</i> <a href=\"http://online.wsj.com/article_email/SB10001424127887323873904578571893758853344-lMyQjAxMTAzMDAwNzEwNDcyWj.html\">reported on one of the court’s</a> most controversial decisions (or at least one of the controversial decisions we know of), in which it radically re-interpreted the word “relevant” in Section 215 of the Patriot Act to allow for the dragnet collection of every phone call record in the United States.\n<p>The <i>Journal</i> explained:\n<blockquote><p>The history of the word \"relevant\" is key to understanding that passage. The Supreme Court in 1991 said things are \"relevant\" if there is a \"reasonable possibility\" that they will produce information related to the subject of the investigation. In criminal cases, courts previously have found that very large sets of information didn't meet the relevance standard because significant portions—innocent people's information—wouldn't be pertinent.\n<p>But the Foreign Intelligence Surveillance Court, FISC, has developed separate precedents, centered on the idea that investigations to prevent national-security threats are different from ordinary criminal cases. The court's rulings on such matters are classified and almost impossible to challenge because of the secret nature of the proceedings.</blockquote>\n<p>Essentially, the court re-defined the word “relevant” to mean “anything and everything.” Sens. Ron Wyden and Mark Udall explained two years ago on the Senate floor that Americans would be shocked if they knew how the government was interpreting the Patriot Act. This is exactly what they were talking about.\n<p>It’s likely the precedent laid down in the last few years will stay law for years to come if the courts are not reformed. FISA judges <a href=\"http://www.bloomberg.com/news/2013-07-02/chief-justice-roberts-is-awesome-power-behind-fisa-court.html\">are appointed by one unelected official</a> who holds lifetime office: the Chief Justice of the Supreme Court. Under current law, for the coming decades, Chief Justice John Roberts will solely decide who will write the sweeping surveillance opinions few will be allowed to read, but which everyone will be subject to.\n<p>Judge James Robertson was once one of those judges. He was appointed to the court in the mid-2000s. He confirmed yesterday for the first time that he resigned in 2005 in protest of the Bush administration illegally bypassing the court altogether. Since Robertson retired, however, the court has transitioned from being ignored to wielding enormous, undemocratic power.\n<p>“What FISA does is not adjudication, but approval,” <a href=\"http://www.guardian.co.uk/law/2013/jul/09/fisa-courts-judge-nsa-surveillance\">Judge Robertson said</a>. “This works just fine when it deals with individual applications for warrants, but the [FISA Amendments Act of 2008] has turned the FISA court into administrative agency making rules for others to follow.”\n<p>Under the FISA Amendments Act, \"the court is now approving programmatic surveillance. I don't think that is a judicial function.” He continued, \"Anyone who has been a judge will tell you a judge needs to hear both sides of a case…This process needs an adversary.\"\n<p>No opposing counsel, rulings handed down in complete secrecy by judges appointed by an unelected official, and no way for those affected to appeal. As <a href=\"http://www.economist.com/blogs/democracyinamerica/2013/07/secret-government?fsrc=scn/tw_ec/america_against_democracy\"><i>The Economist </i>stated</a>,  “Sounds a lot like the sort of thing authoritarian governments set up when they make a half-hearted attempt to create the appearance of the rule of law.”\n<p>This scandal should precipitate many reforms, but one thing is certain: FISA rulings need to be made public so the American people understand how courts are interpreting their constitutional rights. The very idea of democratic law depends on it.\n<p> \n</div></div></div><div><div>Related Issues: </div><div><div><a href=\"https://www.eff.org/nsa-spying\">NSA Spying</a></div></div></div><div><div>Related Cases: </div><div><div><a href=\"https://www.eff.org/cases/jewel\">Jewel v. NSA</a></div></div></div><div><br>Share this: <a target=\"_blank\" href=\"https://twitter.com/home?status=Reform+the+FISA+Court%3A+Privacy+Law+Should+Never+Be+Radically+Reinterpreted+in+Secret+https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Ffisa-court-has-been-radically-reinterpreting-privacy-law-secret\"><img alt=\"Share on Twitter\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/twitter.gif\"></a> <a target=\"_blank\" href=\"https://www.facebook.com/share.php?u=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Ffisa-court-has-been-radically-reinterpreting-privacy-law-secret&t=Reform+the+FISA+Court%3A+Privacy+Law+Should+Never+Be+Radically+Reinterpreted+in+Secret\"><img alt=\"Share on Facebook\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/facebook.gif\"></a> <a href=\"https://plus.google.com/share?url=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Ffisa-court-has-been-radically-reinterpreting-privacy-law-secret\"><img alt=\"Share on Google+\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/gplus-16.png\"></a> <a target=\"_blank\" href=\"https://identi.ca/notice/new?status_textarea=Reform+the+FISA+Court%3A+Privacy+Law+Should+Never+Be+Radically+Reinterpreted+in+Secret+https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Ffisa-court-has-been-radically-reinterpreting-privacy-law-secret\"><img alt=\"Share on Identi.ca\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/identica.gif\"></a> <a target=\"_blank\" href=\"http://sharetodiaspora.github.com/?title=Reform the FISA Court%3A Privacy Law Should Never Be Radically Reinterpreted in Secret&url=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Ffisa-court-has-been-radically-reinterpreting-privacy-law-secret\"><img alt=\"Share on Diaspora\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/diaspora-16.png\"></a>  ||  <a href=\"https://supporters.eff.org/join\">Join EFF</a></div>","direction":"ltr"},"unread":true},{"id":"55jQyVFBayOwBJQ5qCX8DsgTPumTnzjw6LozTAKPiWA=_13fcba8781f:293db4:60f5fbac","originId":"74961 at https://www.eff.org","fingerprint":"d99fead3","title":"Online and Off, Information Control Persists in Turkey","published":1373507068000,"crawled":1373511383071,"alternate":[{"href":"https://www.eff.org/deeplinks/2013/07/online-and-information-control-persists-turkey","type":"text/html"}],"author":"EFF Intern","origin":{"htmlUrl":"https://www.eff.org/rss/updates.xml","streamId":"feed/https://www.eff.org/rss/updates.xml","title":"Deeplinks"},"summary":{"content":"<div><div><div><p>By Greg Epstein, EFF and <a href=\"http://advocacy.globalvoicesonline.org/\">Global Voices Advocacy</a> Intern\n<p>Demonstrators in Turkey have occupied Istanbul’s Taksim Square since last May, in a movement that began as an effort to protect a city park, but has evolved into a larger mobilization against the ruling party’s increasingly autocratic stance.\n<p>Prime Minister Erdogan and the ruling AKP party have used many tools to silence voices of the opposition. On June 15, police began using <a href=\"http://www.upi.com/Top_News/World-News/2013/06/30/Police-use-tear-gas-water-cannons-in-Turkey-protests/UPI-13041372608490/\">tear gas and water cannons</a> to clear out the large encampment in the park. But this effort also has stretched beyond episodes of physical violence and police brutality into the digital world, where information control and media intimidation are on the rise.\n<p>Since the protests began, dozens of Turkish social media users <a href=\"http://advocacy.globalvoicesonline.org/2013/06/07/as-protests-continue-turkey-cracks-down-on-twitter-users/\">have been detained</a> on charges ranging from <a href=\"http://www.thehindu.com/news/international/world/turkey-cracks-down-on-twitter-users/article4784440.ece\">inciting demonstrations, to spreading propaganda</a> and <a href=\"http://www.cnn.com/2013/06/05/world/europe/turkey-protests/\">false information</a>, to <a href=\"http://www.huffingtonpost.com/2013/06/27/turkey-investigates-social-media_n_3509365.html?utm_hp_ref=technology&ir=Technology\">insulting government officials</a>. Dozens more Twitter users were reportedly arrested for posting images of <a href=\"http://www.businessinsider.com/turkish-police-arrest-twitter-users-2013-6\">police brutality</a>, though the legal pretense for these arrests is unclear. A recent ruling in an Ankara court ordered 22 demonstrators detained on <a href=\"http://www.aljazeera.com/news/europe/2013/06/201362216245060913.html\">terrorism-related charges</a>.\n<p>Prime Minister Erdogan made his view of social media known when he described social media as “<a href=\"http://www.slate.com/blogs/future_tense/2013/06/03/turkey_protests_prime_minister_erdogan_blames_twitter_calls_social_media.html\">the worst menace to society</a>” at a June press conference. It is worth noting that <a href=\"http://www.globalpost.com/dispatch/news/regions/europe/turkey/130629/turkey-twitter-facebook-social-media-erdogan-taksim-bbc-turkce#1\">Erdogan himself is said to maintain a Twitter account with over 3 million followers and 2,000 tweets</a> (some Turks question whether the unverified account is really him, or an unofficial supporter.) While the Turkish government has had <a href=\"http://www.usatoday.com/story/news/world/2013/06/18/turkey-vows-to-strengthen-police-powers/2433709/\">limited</a>, <a href=\"http://blogs.wsj.com/middleeast/2013/06/03/amid-turkey-unrest-social-media-becomes-a-battleground/\">if any</a>, involvement in tampering with social media access thus far, government officials appear eager to take further action.\n<p><strong>Roots in traditional media</strong>\n<p>Although current circumstances appear to be testing the limits of Turkey’s information policy framework, the country has a long history of restrictive media policy and practice. In 2013, Turkey ranked <a href=\"http://en.rsf.org/spip.php?page=classement&id_rubrique=1054\">154 out of 166</a> on the Reporters Without Borders’ Annual Worldwide Press Freedom Index, due in part to the fact that since 1992 <a href=\"http://cpj.org/killed/europe/turkey/\">18 journalists have been murdered</a> there, 14 with impunity. In responding to protest coverage, authorities have <a href=\"http://www.cpj.org/2013/06/turkey-fines-tv-stations-in-connection-with-protes.php\">fined</a>, <a href=\"http://www.cpj.org/2013/06/in-crackdown-on-dissent-turkey-detains-press-raids.php\">detained</a> and even <a href=\"http://www.cpj.org/2013/06/journalists-detained-beaten-obstructed-in-istanbul.php\">beaten</a> members of the press. Institutional censorship has also been prevalent: When clashes between protesters and police escalated, activists noted that <a href=\"http://news.yahoo.com/pinned-under-governments-thumb-turkish-media-covers-penguins-124645832.html\">CNN Turk</a> aired a documentary on penguins <a href=\"http://www.dailydot.com/news/cnn-turk-istanbul-riots-penguin-doc-social-media/\">while CNN International</a> ran live coverage of the events in Taksim Square.\n<p><span>Dubbed the “</span><span><a href=\"https://en.rsf.org/turkey-turkey-world-s-biggest-prison-for-19-12-2012,43816.html\">the world’s biggest prison for journalists</a></span><span>” by Reporters Without Borders, Turkey has been particularly aggressive in </span><span><a href=\"http://www.opendemocracy.net/anna-bragga/turkey-media-crisis-how-anti-terrorism-laws-equip-war-on-dissent\">arresting Kurdish journalists under Turkey’s anti-terrorism law</a></span><span> known as Terörle Mücadele Yasası.</span>\n<p><strong>Controlling digital expression</strong>\n<p>As of 2012, <a href=\"http://www.itu.int/ITU-D/icteye/DisplayCountry.aspx?code=TUR\">45% of Turkey’s population</a> had regular access to the Internet. The country’s leading ISP, <a href=\"http://en.wikipedia.org/wiki/T%C3%BCrk_Telekom\">Türk Telekom (TT)</a>, formerly a government-controlled monopoly, was privatized in 2005 but retained a <a href=\"https://opennet.net/research/profiles/turkey#footnote6_oj6yz7g\">95% percent market share in 2007</a>. Türk Telekom also controls the country’s only commercial backbone.\n<p><a href=\"http://www.mevzuat.gov.tr/Metin.Aspx?MevzuatKod=1.5.5651&MevzuatIliski=0&sourceXmlSearch=\">Internet Law No. 5651</a>, passed in 2007, <a href=\"http://sites.psu.edu/comm410censorshipinturkey/literature-review/\">prohibits online content</a> in eight categories including <a href=\"https://opennet.net/research/profiles/turkey\">prostituion, sexual abuse of children, facilitation of the abuse of drugs, and crimes against (or insults to) Atatürk</a>. The law authorizes the Turkish Supreme Council for Telecommunications and IT (TIB) to block a website when it has “adequate suspicion” that the site hosts illegal content. In 2011, the Council of Europe’s <a href=\"https://wcd.coe.int/ViewDoc.jsp?id=1814085\">Commissioner for Human Rights</a> reported that 80% of online content blocked in Turkey was <a href=\"http://en.rsf.org/turkey-turkey-11-03-2011,39758.html\">due to decisions made by the TIB</a>, with the remaining 20% being blocked as the result of orders by Turkey’s traditional court system. In 2009 alone, nearly <a href=\"http://en.rsf.org/surveillance-turkey,39758.html\">200 court decisions</a> found TIB decisions to block websites unjustifiable because they fell outside the scope of Law 5651. The law also has been criticized for authorizing takedowns of entire sites when only a small portion of their content stands in violation of the law.\n<p>Between 2008 and 2010, YouTube was blocked in its entirety under Law 5651 because of specific videos that fell into the category of “crimes against Atatürk”. During this period, YouTube continued to be the <a href=\"http://cyberlaw.org.uk/2008/11/27/tdn-banned-youtube-still-in-top-10-in-turkey/\">10th most visited site</a> in Turkey, with users accessing the site through proxies. The ban was eventually lifted when YouTube removed the videos in question and came under compliance with Turkish law. Sites likes Blogspot, Metacafe, Wix and others have gone through similar ordeals in Turkey in recent years. An estimated <a href=\"http://engelliweb.com/\">31,000 websites are blocked</a> in the country.\n<p>In December 2012, the European Court of Human Rights (ECHR) <a href=\"https://www.eff.org/deeplinks/2012/12/european-human-rights-court-finds-turkey-violation-freedom-expression\">found</a> that Turkey had violated their citizen’s right to free expression by blocking <a href=\"http://sites.google.com\">Google Sites</a>. While Turkey justified the ban based on Sites’ hosting of websites that violated Law 5651, the ECHR found that Turkish law did not allow for “wholesale blocking of access” to a hosting provider like Google Sites. Furthermore, Google Sites had not been informed that it was hosting “illegal” content.\n<p>In 2011, Turkey <a href=\"https://www.eff.org/deeplinks/2011/11/week-internet-censorship-opaque-censorship-turkey-russia-and-britain\">proposed a mandatory online filtering system</a> described as an effort to protect minors and families. This new system, dubbed Güvenli İnternet, or Secure Internet, would block any website that contained keywords from a list of <a href=\"http://en.rsf.org/turkey-online-censorship-now-bordering-on-29-04-2011,40194.html\">138 terms</a> deemed inappropriate by telecom authority BTK. The plan was met with public backlash and <a href=\"http://www.computerworld.com/s/article/9216750/Protests_in_Turkey_against_Internet_controls\">protests</a> causing the government to re-evaluate the system and eventually offer it as an opt-in service. While only <a href=\"http://en.rsf.org/turkey-turkey-12-03-2012,42065.html\">22,000 of Turkey’s 11 million Internet users</a> have so far opted for the system, opponents of Güvenli İnternet decry it as a <a href=\"http://en.rsf.org/turquie-new-internet-filtering-system-02-12-2011,41498.html\">form of censorship, </a><a href=\"http://www.google.com/url?q=http%3A%2F%2Fen.rsf.org%2Fturquie-new-internet-filtering-system-02-12-2011%2C41498.html&sa=D&sntz=1&usg=AFQjCNGpw5o8xnE47-LjuK_fvBbtgt5Row\">disguised </a><a href=\"http://en.rsf.org/turquie-new-internet-filtering-system-02-12-2011,41498.html\">as an effort to protect children</a> and families from “objectionable content”.\n<p><strong>New policies could further restrict social networks</strong>\n<p>As the protests continue, the Turkish government is working to use legal tools already at its disposal to increase control over social network activity. Transportation and Communications Minister Binali Yildirim has called on Twitter to establish a <a href=\"http://www.reuters.com/article/2013/06/26/net-us-turkey-protests-twitter-idUSBRE95P0XC20130626\">representative office within the country</a>. Legally, this could give the Turkish government greater ability to obtain user data from the company. But these requests have not received a warm response from Twitter, which has developed a <a href=\"https://www.google.com/url?q=https%3A%2F%2Fwww.eff.org%2Fwho-has-your-back-2013&sa=D&sntz=1&usg=AFQjCNEv4KpiTWJHxBwMpjfO3nW7kaiNHw\">reputation for protecting user data</a> in the face of government requests. While Twitter has “<a href=\"http://www.hurriyetdailynews.com/minister-says-twitter-turned-down-cooperation-offer-over-turkey-protests.aspx?pageID=238&nID=49496&NewsCatID=374\">turned down</a>” requests from the Turkish government for user data and general cooperation, Minister Yildirim stated that Facebook had <a href=\"http://legalinsurrection.com/2013/06/facebook-and-twitter-refuse-to-cooperate-with-turkish-govt-crackdown-on-protesters/\">responded “positively</a>”. Shortly thereafter, Facebook published a <a href=\"https://newsroom.fb.com/fact-check\">“Fact Check”</a> post that denied cooperation with Turkish officials.\n<p>Turkey’s Interior Minister Muammer Güler told journalists that “<a href=\"http://www.hurriyetdailynews.com/governement-working-on-draft-to-restrict-social-media-in-turkey.aspx?pageID=238&nID=48982&NewsCatID=338#.UcCVIc-KyUs.twitter\">the issue [of social media] needs a separate regulation</a>” and Deputy <a href=\"http://www.worldbulletin.net/?aType=haber&ArticleID=111568\">Prime Minister Bozdag stated that the government had no intention of placing an outright ban</a> on social media, but indicated a desire to <a href=\"http://www.bloomberg.com/news/2013-06-20/turkey-announces-plan-to-restrict-fake-social-media-accounts.html\">outlaw “fake” social media accounts</a>. Sources have confirmed that the <a href=\"http://www.huffingtonpost.com/2013/06/27/turkey-investigates-social-media_n_3509365.html?utm_hp_ref=technology&ir=Technology\">Justice Ministry is conducting research and drafting legislation on the issue</a>.\n<p>New media expert Ozgur Uckan of Istanbul’s Bilgi University <a href=\"http://www.npr.org/blogs/parallels/2013/06/26/195889178/thanks-but-no-social-media-refuses-to-share-with-turkey\">noted that</a> “censoring social media sites presents a technical challenge, and that may be why officials are talking about criminalizing certain content, in an effort to intimidate users and encourage self-censorship.”\n<p>While the details of <a href=\"http://www.todayszaman.com/newsDetail_getNewsById.action;jsessionid=F3B400500B268D2945E03E7F4BF27331?newsId=318800&columnistId=0\">these new laws </a>remain to be seen, it is likely that they will have some impact on journalistic and activist activities in the country, especially in times of rising public protest and dissent.\n</div></div></div><div><div>Related Issues: </div><div><div><a href=\"https://www.eff.org/issues/free-speech\">Free Speech</a></div><div><a href=\"https://www.eff.org/issues/bloggers-under-fire\">Bloggers Under Fire</a></div><div><a href=\"https://www.eff.org/issues/international\">International</a></div></div></div><div><br>Share this: <a target=\"_blank\" href=\"https://twitter.com/home?status=Online+and+Off%2C+Information+Control+Persists+in+Turkey+https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fonline-and-information-control-persists-turkey\"><img alt=\"Share on Twitter\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/twitter.gif\"></a> <a target=\"_blank\" href=\"https://www.facebook.com/share.php?u=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fonline-and-information-control-persists-turkey&t=Online+and+Off%2C+Information+Control+Persists+in+Turkey\"><img alt=\"Share on Facebook\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/facebook.gif\"></a> <a href=\"https://plus.google.com/share?url=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fonline-and-information-control-persists-turkey\"><img alt=\"Share on Google+\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/gplus-16.png\"></a> <a target=\"_blank\" href=\"https://identi.ca/notice/new?status_textarea=Online+and+Off%2C+Information+Control+Persists+in+Turkey+https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fonline-and-information-control-persists-turkey\"><img alt=\"Share on Identi.ca\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/identica.gif\"></a> <a target=\"_blank\" href=\"http://sharetodiaspora.github.com/?title=Online and Off%2C Information Control Persists in Turkey&url=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fonline-and-information-control-persists-turkey\"><img alt=\"Share on Diaspora\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/diaspora-16.png\"></a>  ||  <a href=\"https://supporters.eff.org/join\">Join EFF</a></div>","direction":"ltr"},"unread":true},{"id":"55jQyVFBayOwBJQ5qCX8DsgTPumTnzjw6LozTAKPiWA=_13fcab0b34e:7a49e:9d82f563","originId":"74936 at https://www.eff.org","fingerprint":"73850e04","title":"NSA Leaks Prompt Surveillance Dialogue in India","published":1373493485000,"crawled":1373495145294,"alternate":[{"href":"https://www.eff.org/deeplinks/2013/07/nsa-leaks-prompt-surveillance-dialogue-india","type":"text/html"}],"author":"Jillian C. York","origin":{"htmlUrl":"https://www.eff.org/rss/updates.xml","streamId":"feed/https://www.eff.org/rss/updates.xml","title":"Deeplinks"},"summary":{"content":"<div><div><div><p dir=\"ltr\"><em>This is the 8th article in our <a href=\"https://www.eff.org/deeplinks/2013/06/spy-without-borders\">Spies Without Borders</a></em> <em>series. The series looks at how the information disclosed in the NSA leaks affect internet users around the world.</em>\n<p dir=\"ltr\">As we have discussed throughout our <a href=\"https://www.eff.org/deeplinks/2013/06/spy-without-borders\">Spies Without Borders</a> series, the backlash against the NSA’s global surveillance programs has been strong. From <a href=\"http://www.theatlantic.com/technology/archive/2013/06/us-government-surveillance-bad-for-silicon-valley-bad-for-democracy-around-the-world/277335/\">Germany</a>, where activists demonstrated against the mass spying, to <a href=\"http://madamasr.com/content/america%E2%80%99s-prism-our-fears-digital-age-come-true\">Egypt</a>—allegedly one of the NSA’s <a href=\"http://www.guardian.co.uk/world/2013/jun/08/nsa-boundless-informant-global-datamining\">top targets</a>—where the reaction is largely the same: “<a href=\"https://www.eff.org/deeplinks/2013/06/world-us-congress-im-not-american-i-have-privacy-rights\">I’m not American, but I have rights too</a>.”\n<p dir=\"ltr\">Indian commentators are no exception. A piece in the <em>Financial Times</em> stated that the revelations highlighted the “<a href=\"http://www.ft.com/cms/s/04b972d8-e59b-11e2-ad1a-00144feabdc0,Authorised=false.html?_i_location=http%3A%2F%2Fwww.ft.com%2Fcms%2Fs%2F0%2F04b972d8-e59b-11e2-ad1a-00144feabdc0.html&_i_referer=http%3A%2F%2Fwww.bloomberg.com%2Fnews%2F2013-07-08%2Findians-see-a-gift-in-nsa-leaks.html#axzz2YRT5XQVr\">moral decline of America</a>,” while another in the <em>Hindu</em> <a href=\"http://www.thehindu.com/opinion/op-ed/indias-cowardly-display-of-servility/article4874219.ece\">berated India</a> for its “servility” toward the U.S.\n<p dir=\"ltr\">But the revelations about the NSA’s spying activities have also created an opportunity for Indian activists to speak out about their own country’s practices. As Pranesh Prakash, Policy Director for the Centre for Internet &amp; Society <a href=\"http://articles.economictimes.indiatimes.com/2013-06-13/news/39952596_1_nsa-india-us-homeland-security-dialogue-national-security-letters\">argues in a piece for the <em>Economic Times</em></a>, Indian surveillance laws and practices have been “far worse” than those in the U.S. Writing for <em>Quartz</em>, Nandagopal J. Nair <a href=\"http://qz.com/99019/no-call-email-or-text-will-be-safe-from-indias-surveillance-network/\">agrees</a>, saying that “India’s new surveillance network will make the NSA green with envy.”\n<p dir=\"ltr\">The U.S. has in fact refused Indian requests for real-time access to internet activity routed through U.S.-based Internet sites, and U.S. companies have also <a href=\"http://www.computerweekly.com/news/1280094658/Google-refuses-access-to-Gmail-encryption-for-Indian-government\">stood up to privacy-violating demands</a>. Other companies, such as RIM—the company that owns BlackBerry—have <a href=\"http://articles.economictimes.indiatimes.com/2012-10-29/news/34798663_1_interception-solution-blackberry-interception-blackberry-services\">cooperated with the Indian government</a>.\n<p dir=\"ltr\">Regulatory privacy protections in India are weak: Telecom companies are required by license to provide data to the government, and the use of encryption is <a href=\"https://www.dot.gov.in/isp/internet-licence-dated%2016-10-2007.pdf\">extremely limited</a>. As we <a href=\"https://www.eff.org/deeplinks/2013/02/disproportionate-state-surveillance-violation-privacy\">have previously explained</a>, India service providers are required to ensure that bulk encryption is not deployed. Additionally, no individual or entity can employ encryption with a key longer than 40 bits. If the encryption surpasses this limit, the individual or entity will need prior written permission from the Department of Telecommunications and must deposit the decryption keys with the <a href=\"https://www.eff.org/deeplinks/2013/07/License%20Agreement%20for%20Provision%20of%20Internet%20Services%20Section%202.2%20(vii)\">Department</a>. The limitation on encryption in India means that technically any encrypted material over 40 bits would be accessible by the State. Ironically, the Reserve Bank of India issues security recommendations that banks should use strong encryption as higher as 128-bit for securing browser. In addition to such limitations on the use of encryption, commentators have also <a href=\"http://www.hindustantimes.com/India-news/NewDelhi/Concerns-over-central-snoop/Article1-1083658.aspx\">raised concerns</a> about the process for lawful intercept.\n<p dir=\"ltr\">The <a href=\"http://qz.com/99019/no-call-email-or-text-will-be-safe-from-indias-surveillance-network/\">latest attempt</a> at surveillance by the Indian government has been <a href=\"http://www.thehindu.com/news/national/indias-surveillance-project-may-be-as-lethal-as-prism/article4834619.ece\">roundly criticized</a> as “more intrusive” than the NSA’s programs. In the <em>New York Times</em>, Prakash <a href=\"http://india.blogs.nytimes.com/2013/07/10/how-surveillance-works-in-india/\">explained</a> the new program, the Centralized Monitoring System or C.M.S.:\n<blockquote><p dir=\"ltr\">With the C.M.S., the government will get <a href=\"http://www.thehindu.com/news/national/indias-surveillance-project-may-be-as-lethal-as-prism/article4834619.ece\">centralized access to all communications metadata and content</a> traversing through all telecom networks in India. This means that the government can listen to all your calls, track a mobile phone and its user’s location, read all your text messages, personal e-mails and chat conversations. It can also see all your Google searches, Web site visits, usernames and passwords if your communications aren’t encrypted.\n</blockquote>\n<p dir=\"ltr\">Notably, India does not have laws allowing for mass surveillance; rather, lawful intercept is covered under the archaic Indian Telegraph Act of 1885 [<a href=\"http://www.ijlt.in/pdffiles/Indian-Telegraph-Act-1885.pdf\">PDF</a>] and the <a href=\"http://www.wipo.int/wipolex/en/text.jsp?file_id=185999\">Information Technology Act of 2000</a> (IT Act). Under both laws, interception must be time-limited and targeted.\n<p dir=\"ltr\">In the <em>Times</em> piece, Prakash also lambasts the IT Act, which he says “very substantially lowers the bar for wiretapping.”  \n<p dir=\"ltr\">All of this points to the fact that our fight for privacy is a shared global challenge; or as a columnist for India’s Sunday Guardian <a href=\"http://www.sunday-guardian.com/technologic/your-freedom-has-just-left-the-building\">recently put it</a>: “We're all now citizens of the surveillance state.”\n</div></div></div><div><div>Related Issues: </div><div><div><a href=\"https://www.eff.org/issues/international\">International</a></div><div><a href=\"https://www.eff.org/issues/surveillance-human-rights\">State Surveillance &amp; Human Rights</a></div><div><a href=\"https://www.eff.org/nsa-spying\">NSA Spying</a></div></div></div><div><br>Share this: <a target=\"_blank\" href=\"https://twitter.com/home?status=NSA+Leaks+Prompt+Surveillance+Dialogue+in+India+https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fnsa-leaks-prompt-surveillance-dialogue-india\"><img alt=\"Share on Twitter\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/twitter.gif\"></a> <a target=\"_blank\" href=\"https://www.facebook.com/share.php?u=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fnsa-leaks-prompt-surveillance-dialogue-india&t=NSA+Leaks+Prompt+Surveillance+Dialogue+in+India\"><img alt=\"Share on Facebook\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/facebook.gif\"></a> <a href=\"https://plus.google.com/share?url=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fnsa-leaks-prompt-surveillance-dialogue-india\"><img alt=\"Share on Google+\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/gplus-16.png\"></a> <a target=\"_blank\" href=\"https://identi.ca/notice/new?status_textarea=NSA+Leaks+Prompt+Surveillance+Dialogue+in+India+https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fnsa-leaks-prompt-surveillance-dialogue-india\"><img alt=\"Share on Identi.ca\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/identica.gif\"></a> <a target=\"_blank\" href=\"http://sharetodiaspora.github.com/?title=NSA Leaks Prompt Surveillance Dialogue in India&url=https%3A%2F%2Fwww.eff.org%2Fdeeplinks%2F2013%2F07%2Fnsa-leaks-prompt-surveillance-dialogue-india\"><img alt=\"Share on Diaspora\" src=\"https://www.eff.org/sites/all/themes/frontier/images/share/diaspora-16.png\"></a>  ||  <a href=\"https://supporters.eff.org/join\">Join EFF</a></div>","direction":"ltr"},"unread":true},{"id":"BNU7PBBhwHi0trgjATqXMRVLGGikmyZQMhiBOKF3WjM=_13fc0aa0b96:2e660ce:b4edca20","originId":"http://dave.cheney.net/?p=672","fingerprint":"a19ae370","keywords":["Go","Programming","cgo","cross compilation","cross compile"],"content":{"content":"<p>This post is a compliment to one I wrote in <a title=\"An introduction to cross compilation with Go\" href=\"http://dave.cheney.net/2012/09/08/an-introduction-to-cross-compilation-with-go\">August of last year</a>, updating it for Go 1.1. Since last year tools such as <a title=\"goxc\" href=\"http://www.laher.net.nz/goxc/\">goxc</a> have appeared which go a beyond a simple shell wrapper to provide a complete build and distribution solution.\n<h1>Introduction</h1>\n<p>Go provides excellent support for producing binaries for foreign platforms without having to install Go on the target. This is extremely handy for testing packages that use build tags or where the target platform is not suitable for development.\n<p>Support for building a version of Go suitable for cross compilation is built into the Go build scripts; just set the <code>GOOS</code>, <code>GOARCH</code>, and possibly <code>GOARM</code> correctly and invoke <code>./make.bash</code> in <code>$GOROOT/src</code>. Therefore, what follows is provided simply for convenience.\n<h1>Getting started</h1>\n<p>1. Install Go from source. The instructions are well documented on the Go website, <a href=\"http://golang.org/doc/install/source\">golang.org/doc/install/source</a>. A summary for those familiar with the process follows.\n<pre>% hg clone https://code.google.com/p/go\n% cd go/src\n% ./all.bash</pre>\n<p>2. Checkout the support scripts from Github, <a href=\"https://github.com/davecheney/golang-crosscompile\">github.com/davecheney/golang-crosscompile</a>\n<pre>% git clone git://github.com/davecheney/golang-crosscompile.git\n% source golang-crosscompile/crosscompile.bash</pre>\n<p>3. Build Go for all supported platforms\n<pre>% go-crosscompile-build-all\ngo-crosscompile-build darwin/386\ngo-crosscompile-build darwin/amd64\ngo-crosscompile-build freebsd/386\ngo-crosscompile-build freebsd/amd64\ngo-crosscompile-build linux/386\ngo-crosscompile-build linux/amd64\ngo-crosscompile-build linux/arm\ngo-crosscompile-build windows/386\ngo-crosscompile-build windows/amd64</pre>\n<p>This will compile the Go runtime and standard library for each platform. You can see these packages if you look in <code>go/pkg</code>.\n<pre>% ls -1 go/pkg \ndarwin_386\ndarwin_amd64\nfreebsd_386\nfreebsd_amd64\nlinux_386\nlinux_amd64\nlinux_arm\nobj\ntool\nwindows_386\nwindows_amd64</pre>\n<h1>Using your cross compilation environment</h1>\n<p>Sourcing <code>crosscompile.bash</code> provides a <code>go-$GOOS-$GOARCH</code> function for each platform, you can use these as you would the standard <code>go</code> tool. For example, to compile a program to run on <code>linux/arm</code>.\n<pre>% cd $GOPATH/github.com/davecheney/gmx/gmxc\n% go-linux-arm build \n% file ./gmxc \n./gmxc: ELF 32-bit LSB executable, ARM, version 1 (SYSV), \nstatically linked, not stripped</pre>\n<p>This file is not executable on the host system (<code>darwin/amd64</code>), but will work on <code>linux/arm</code>.\n<h1>Some caveats</h1>\n<h2>Cross compiled binaries, not a cross compiled Go installation</h2>\n<p>This post describes how to produce an environment that will build Go programs for your target environment, it will not however build a Go environment for your target. For that, you must build Go directly on the target platform. For most platforms this means installing from source, or using a version of Go provided by your operating systems packaging system.<br>\nIf you are using\n<h2>No cgo in cross platform builds</h2>\n<p>It is currently not possible to produce a <code>cgo</code> enabled binary when cross compiling from one operating system to another. This is because packages that use <code>cgo</code> invoke the C compiler directly as part of the build process to compile their C code and produce the C to Go trampoline functions. At the moment the name of the C compiler is hard coded to <code>gcc</code>, which assumes the system default gcc compiler even if a cross compiler is installed.\n<p>In Go 1.1 this restriction was reinforced further by making <code>CGO_ENABLED</code> default to <code>0</code> (off) when any cross compilation was attempted.\n<h2>GOARM flag needed for cross compiling to linux/arm.</h2>\n<p>Because some arm platforms lack a hardware floating point unit the <code>GOARM</code> value is used to tell the linker to use hardware or software floating point code. Depending on the specifics of the target machine you are building for, you may need to supply this environment value when building.\n<pre>% GOARM=5 go-linux-arm build</pre>\n<p>As of <code><a href=\"https://code.google.com/p/go/source/detail?r=e4b20018f7979a6c3ef259d36267bd753a92d9d2\">e4b20018f797</a></code> you will at least get a nice error telling you which <code>GOARM</code> value to use.\n<pre>$ ./gmxc \nruntime: this CPU has no floating point hardware, so it cannot \nrun this GOARM=7 binary. Recompile using GOARM=5.</pre>\n<p>By default, Go assumes a hardware floating point unit if no <code>GOARM</code> value is supplied. You can read more about Go on <code>linux/arm</code> on the <a href=\"http://code.google.com/p/go-wiki/wiki/GoArm\">Go Language Community Wiki</a>.","direction":"ltr"},"title":"An introduction to cross compilation with Go 1.1","published":1373325259000,"alternate":[{"href":"http://dave.cheney.net/2013/07/09/an-introduction-to-cross-compilation-with-go-1-1","type":"text/html"}],"author":"Dave Cheney","crawled":1373326936982,"origin":{"streamId":"feed/http://dave.cheney.net/feed","htmlUrl":"http://dave.cheney.net","title":"Dave Cheney"},"summary":{"content":"This post is a compliment to one I wrote in August of last year, updating it for Go 1.1. Since last year tools such as goxc have appeared which go a beyond a simple shell wrapper to provide a complete build and distribution solution. Introduction Go provides excellent support for producing binaries for foreign platforms [...]","direction":"ltr"},"unread":true},{"id":"BNU7PBBhwHi0trgjATqXMRVLGGikmyZQMhiBOKF3WjM=_13fb7a49547:1a07f27:1fba5d06","originId":"http://dave.cheney.net/?p=655","fingerprint":"e20fa0ad","keywords":["Go","Programming","benchmarking","profiling"],"content":{"content":"<h1>Introduction</h1>\n<p>The Go runtime has built in support for several types of profiling that can be used to inspect the performance of your programs. A common way to leverage this support is via the <code>testing</code> package, but if you want to profile a full application it is sometimes complicated to configure the various profiling mechanisms.\n<p>I wrote <em><a href=\"https://github.com/davecheney/profile\">profile</a></em> to scratch my own itch and create a simple way to profile an existing Go program without having to restructure it as a benchmark.\n<h1>Installation</h1>\n<p><em>profile</em> is <code>go get</code>able so installation is a simple as\n<pre>go get github.com/davecheney/profile</pre>\n<h1>Usage</h1>\n<p>Enabling profiling in your application is as simple as one line at the top of your <code>main</code> function\n<pre>import \"github.com/davecheney/profile\"\n\nfunc main() {\n defer profile.Start(profile.CPUProfile).Stop()\n ...\n}</pre>\n<h1>Options</h1>\n<p>What to profile is controlled by the <code>*profile.Config</code> value passed to <code>profile.Start</code>. A <code>nil</code> <code>*profile.Config</code> is the same as choosing all the defaults. By default no profiles are enabled.\n<p>In this more complicated example a <code>*profile.Config</code> is constructed by hand which enables memory profiling, but disables the shutdown hook.\n<pre>import \"github.com/davecheney/profile\"\n\nfunc main() {\n cfg := profile.Config {\n MemProfile: true,\n NoShutdownHook: true, // do not hook SIGINT\n }\n // p.Stop() must be called before the program exits to \n // ensure profiling information is written to disk.\n p := profile.Start(&amp;cfg)\n ...\n}</pre>\n<p>Several <a href=\"http://godoc.org/github.com/davecheney/profile#_variables\">convenience variables</a> are provided for cpu, memory, and block (contention) profiling.\n<p>For more complex options, consult the documentation on the <a href=\"http://godoc.org/github.com/davecheney/profile#Config\"><code>profile.Config</code></a> type. Enabling more than one profile may cause your results to be less reliable as profiling itself is not without overhead.\n<h1>Example</h1>\n<p>To show <em>profile</em> in action, I modified <code>cmd/godoc</code> following the instructions in the first example.\n<pre>% godoc -http=:8080\n2013/07/07 15:29:11 profile: cpu profiling enabled, /tmp/profile002803/cpu.pprof</pre>\n<p>In another window I visited <code>http://localhost:8080</code> a few times to have some profiling data to record, then stopped <code>godoc</code>.\n<pre>^C2013/07/07 15:29:33 profile: caught interrupt, stopping profiles\n% go tool pprof $(which godoc) /tmp/profile002803/cpu.pprof\nWelcome to pprof! For help, type 'help'.\n(pprof) top10\nTotal: 15 samples\n 2 13.3% 13.3% 2 13.3% go/scanner.(*Scanner).next\n 2 13.3% 26.7% 2 13.3% path.Clean\n 1 6.7% 33.3% 3 20.0% go/scanner.(*Scanner).Scan\n 1 6.7% 40.0% 1 6.7% main.hasPathPrefix\n 1 6.7% 46.7% 3 20.0% main.mountedFS.translate\n 1 6.7% 53.3% 1 6.7% path.Dir\n 1 6.7% 60.0% 1 6.7% path/filepath.(*lazybuf).append\n 1 6.7% 66.7% 1 6.7% runtime.findfunc\n 1 6.7% 73.3% 2 13.3% runtime.makeslice\n 1 6.7% 80.0% 2 13.3% runtime.mallocgc</pre>\n<h1>Licence</h1>\n<p><em>profile</em> is available under a <a href=\"https://github.com/davecheney/profile/blob/master/LICENSE\">BSD licence</a>.","direction":"ltr"},"title":"Introducing profile, super simple profiling for Go programs","published":1373175683000,"alternate":[{"href":"http://dave.cheney.net/2013/07/07/introducing-profile-super-simple-profiling-for-go-programs","type":"text/html"}],"author":"Dave Cheney","crawled":1373175584071,"origin":{"streamId":"feed/http://dave.cheney.net/feed","htmlUrl":"http://dave.cheney.net","title":"Dave Cheney"},"summary":{"content":"Introduction The Go runtime has built in support for several types of profiling that can be used to inspect the performance of your programs. A common way to leverage this support is via the testing package, but if you want to profile a full application it is sometimes complicated to configure the various profiling mechanisms. [...]","direction":"ltr"},"unread":true},{"id":"J04hLsLffn9GYO0/gp4Z4+C/kSDo3Uxwtg7Qn1jJCK4=_13fa693749b:503b:eacbe387","originId":"/blog/2013/06/23/ember-1-0-rc6.html","fingerprint":"e695138f","content":{"content":"<p>Ember.js 1.0 RC6 has been released and is available from the\nmain website and at <a href=\"http://builds.emberjs.com\">builds.emberjs.com</a>. This\nrelease features two big changes: 1) router update 2) Ember Components.\n<p><strong><em>Router Update</em></strong>\n<p>The biggest change is router update (aka \"router facelift\"), which addresses\ntwo major issues. The first was inconsistent semantics between URL-based transitions\nand <code>transitionTo</code>. The second was spotty async support which made it difficult to\nprevent or delay route entry in cases such as authentication and async code-loading.\n<p>We have now harmonized URL changes and <code>transitionTo</code> semantics and more fully embraced\nasynchrony using promises.\n<p>Additionally, router transitions have become first-class citizens and there are\nnew hooks to prevent or decorate transitions:\n<p><code>willTransition</code>: fires on current routes whenever a transition is about to take place\n<code>beforeModel</code>/<code>model</code>/<code>afterModel</code>: hooks fired during the async validation phase\n<p>Finally there is an <code>error</code> event which fires whenever there is a rejected promise or\nerror thrown in any of the <code>beforeModel</code>/<code>model</code>/<code>afterModel</code> hooks.\n<p>For more on new router features, see:\n<ul>\n<li><a href=\"https://machty.s3.amazonaws.com/ember-facelift-presentation/index.html#/1\">New router overview given by Alex Matchneer's at the June Ember NYC Meetup </a>\n<li><a href=\"https://gist.github.com/machty/5647589\">Usage Examples</a>\n<li><a href=\"http://www.embercasts.com/episodes/client-side-authentication-part-2\">Client-side Authentication Part 2 Embercast</a>\n</ul>\n<p>Special thanks to Alex Matchneer for his work on this!\n<p><strong><em>Ember Components</em></strong>\n<p>The other major change is the introduction of Ember Components, which shares Web\nComponents' goal of facilitating creation of reusable higher-level page elements.\n<p>Ember Components will generally consist of a <code>template</code> and a <code>view</code> which encapsulate the <code>template</code>'s\nproperty access and actions. Any reference to outside constructs is handled through context\ninfo passed into the <code>view</code>. Components can be customized through subclassing.\n<p>Ember Components naming conventions are: 1) the <code>template</code>'s name begins with 'components/', and 2) the\nComponent's name must include a '-' (this latter convention is consistent with Web Components standards,\nand prevents name collisions with built-in controls that wrap HTML elements). As an example, a component\nmight be named <code>'radio-button'</code>. Its <code>template</code> would be <code>'components/radio-button'</code> and you would call\nit as <code>{{radio-button}}</code> in other <code>templates</code>.\n<p>Stay tuned for more docs and examples of this exciting new feature.","direction":"ltr"},"title":"Ember 1.0 RC6","updated":1371945600000,"published":1371945600000,"author":"Ember","crawled":1372889248923,"origin":{"streamId":"feed/http://emberjs.com/blog/feed.xml","htmlUrl":"http://emberjs.com/blog","title":"Ember Blog"},"summary":{"content":"<p>Ember.js 1.0 RC6 has been released and is available from the\nmain website and at <a href=\"http://builds.emberjs.com\">builds.emberjs.com</a>. This\nrelease features two big changes: 1) router update 2) Ember Components.\n<p><strong><em>Router Update</em></strong>\n<p>The biggest change is router update (aka \"router facelift...","direction":"ltr"},"unread":true},{"id":"BNU7PBBhwHi0trgjATqXMRVLGGikmyZQMhiBOKF3WjM=_13fa12b9416:28475e:f5ac5ed","originId":"http://dave.cheney.net/?p=650","fingerprint":"dc7ecd3d","keywords":["Go","Programming","arm","tarball"],"content":{"content":"<p>This evening I rebuilt my unofficial ARM tarball distributions to Go version 1.1.1.\n<p>You can find them by following the <a title=\"Unofficial ARM tarballs for Go\" href=\"http://dave.cheney.net/unofficial-arm-tarballs\">link in the main header of this page</a>.","direction":"ltr"},"title":"Unofficial Go 1.1.1 tarballs for ARM now available","published":1372766216000,"alternate":[{"href":"http://dave.cheney.net/2013/07/02/unofficial-go-1-1-1-tarballs-for-arm-now-available","type":"text/html"}],"author":"Dave Cheney","crawled":1372798555158,"origin":{"streamId":"feed/http://dave.cheney.net/feed","htmlUrl":"http://dave.cheney.net","title":"Dave Cheney"},"summary":{"content":"This evening I rebuilt my unofficial ARM tarball distributions to Go version 1.1.1. You can find them by following the link in the main header of this page.","direction":"ltr"},"unread":true},{"recrawled":1372565864356,"id":"BNU7PBBhwHi0trgjATqXMRVLGGikmyZQMhiBOKF3WjM=_13f92dee4c0:494f6d:2ae58ca9","fingerprint":"b5d314e9","originId":"http://dave.cheney.net/?p=612","keywords":["Go","Programming","benchmark","testing"],"content":{"content":"<p>This post continues a series on the <code>testing</code> package I started a few weeks back. You can read the previous article on <a title=\"Writing table driven tests in Go\" href=\"http://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go\">writing table driven tests here</a>. You can find the code mentioned below in the <a href=\"https://github.com/davecheney/fib\">https://github.com/davecheney/fib</a> repository.\n<h1>Introduction</h1>\n<p>The Go <code><a href=\"http://golang.org/pkg/testing/\">testing</a></code> package contains a benchmarking facility that can be used to examine the performance of your Go code. This post explains how to use the <code>testing</code> package to write a simple benchmark.\n<p>You should also review the introductory paragraphs of <a href=\"http://blog.golang.org/profiling-go-programs\">Profiling Go programs</a>, specifically the section on configuring power management on your machine. For better or worse, modern CPUs rely heavily on active thermal management which can add noise to benchmark results.\n<h1>Writing a benchmark</h1>\n<p>We’ll reuse the <code>Fib</code> function from the previous article.\n<pre>func Fib(n int) int {\n if n &lt; 2 {\n return n\n }\n return Fib(n-1) + Fib(n-2)\n}</pre>\n<p>Benchmarks are placed inside <code>_test.go</code> files and follow the rules of their <code>Test</code> counterparts. In this first example we’re going to benchmark the speed of computing the 10<sup>th</sup> number in the Fibonacci series.\n<pre>// from fib_test.go\nfunc BenchmarkFib10(b *testing.B) {\n // run the Fib function b.N times\n for n := 0; n &lt; b.N; n++ {\n Fib(10)\n }\n}</pre>\n<p>Writing a benchmark is very similar to writing a test as they share the infrastructure from the <code>testing</code> package. Some of the key differences are\n<ul>\n<li>Benchmark functions start with <code>Benchmark</code> not <code>Test</code>.\n<li>Benchmark functions are run several times by the <code>testing</code> package. The value of <code>b.N</code> will increase each time until the benchmark runner is satisfied with the stability of the benchmark. This has some important ramifications which we’ll investigate later in this article.\n<li>Each benchmark must execute the code under test <code>b.N</code> times. The <code>for</code> loop in <code>BenchmarkFib10</code> will be present in every benchmark function.\n</ul>\n<h1>Running benchmarks</h1>\n<p>Now that we have a benchmark function defined in the tests for the <code>fib</code> package, we can invoke it with <code>go test -bench=.</code>\n<pre>% go test -bench=.\nPASS\nBenchmarkFib10 5000000 509 ns/op\nok github.com/davecheney/fib 3.084s</pre>\n<p>Breaking down the text above, we pass the <code>-bench</code> flag to <code>go test</code> supplying a regular expression matching everything. You must pass a valid regex to <code>-bench</code>, just passing <code>-bench</code> is a syntax error. You can use this property to run a subset of benchmarks.\n<p>The first line of the result, <code>PASS</code>, comes from the testing portion of the test driver, asking <code>go test</code> to run your benchmarks does not disable the tests in the package. If you want to skip the tests, you can do so by passing a regex to the <code>-run</code> flag that will not match anything. I usually use\n<pre>go test -run=XXX -bench=.</pre>\n<p>The second line is the average run time of the function under test for the final value of <code>b.N</code> iterations. In this case, my laptop can execute <code>Fib(10)</code> in 509 nanoseconds. If there were additional <code>Benchmark</code> functions that matched the <code>-bench</code> filter, they would be listed here.\n<h1>Benchmarking various inputs</h1>\n<p>As the original <code>Fib</code> function is the classic recursive implementation, we’d expect it to exhibit exponential behavior as the input grows. We can explore this by rewriting our benchmark slightly using a pattern that is very common in the Go standard library.\n<pre>func benchmarkFib(i int, b *testing.B) {\n for n := 0; n &lt; b.N; n++ {\n Fib(i)\n }\n}\n\nfunc BenchmarkFib1(b *testing.B) { benchmarkFib(1, b) }\nfunc BenchmarkFib2(b *testing.B) { benchmarkFib(2, b) }\nfunc BenchmarkFib3(b *testing.B) { benchmarkFib(3, b) }\nfunc BenchmarkFib10(b *testing.B) { benchmarkFib(10, b) }\nfunc BenchmarkFib20(b *testing.B) { benchmarkFib(20, b) }\nfunc BenchmarkFib40(b *testing.B) { benchmarkFib(40, b) }</pre>\n<p>Making <code>benchmarkFib</code> private avoids the testing driver trying to invoke it directly, which would fail as its signature does not match <code>func(*testing.B)</code>. Running this new set of benchmarks gives these results on my machine.\n<pre>BenchmarkFib1 1000000000 2.84 ns/op\nBenchmarkFib2 500000000 7.92 ns/op\nBenchmarkFib3 100000000 13.0 ns/op\nBenchmarkFib10 5000000 447 ns/op\nBenchmarkFib20 50000 55668 ns/op\nBenchmarkFib40 2 942888676 ns/op</pre>\n<p>Apart from confirming the exponential behavior of our simplistic <code>Fib</code> function, there are some other things to observe in this benchmark run.\n<ul>\n<li>Each benchmark is run for a <em>minimum</em> of 1 second by default. If the second has not elapsed when the <code>Benchmark</code> function returns, the value of <code>b.N</code> is increased in the sequence 1, 2, 5, 10, 20, 50, … and the function run again.\n<li>The final <code>BenchmarkFib40</code> only ran two times with the average was just under a second for each run. As the <code>testing</code> package uses a simple average (total time to run the benchmark function over <code>b.N</code>) this result is statistically weak. You can increase the minimum benchmark time using the <code>-benchtime</code> flag to produce a more accurate result.\n<pre>% go test -bench=Fib40 -benchtime=20s\nPASS\nBenchmarkFib40 50 944501481 ns/op</pre>\n\n</ul>\n<h1>Traps for young players</h1>\n<p>Above I mentioned the <code>for</code> loop is crucial to the operation of the benchmark driver. Here are two examples of a faulty <code>Fib</code> benchmark.\n<pre>func BenchmarkFibWrong(b *testing.B) {\n for n := 0; n &lt; b.N; n++ {\n Fib(n)\n }\n}\n\nfunc BenchmarkFibWrong2(b *testing.B) {\n Fib(b.N)\n}</pre>\n<p>On my system <code>BenchmarkFibWrong</code> never completes. This is because the run time of the benchmark will increase as <code>b.N</code> grows, never converging on a stable value. <code>BenchmarkFibWrong2</code> is similarly affected and never completes.\n<h1>A note on compiler optimisations</h1>\n<p>Before concluding I wanted to highlight that to be completely accurate, any benchmark should be careful to avoid compiler optimisations eliminating the function under test and artificially lowering the run time of the benchmark.\n<pre>var result int\n\nfunc BenchmarkFibComplete(b *testing.B) {\n var r int\n for n := 0; n &lt; b.N; n++ {\n // always record the result of Fib to prevent\n // the compiler eliminating the function call.\n r = Fib(10)\n }\n // always store the result to a package level variable\n // so the compiler cannot eliminate the Benchmark itself.\n result = r\n}</pre>\n<h1>Conclusion</h1>\n<p>The benchmarking facility in Go works well, and is widely accepted as a reliable standard for measuring the performance of Go code. Writing benchmarks in this manner is an excellent way of communicating a performance improvement, or a regression, in a reproducible way.","direction":"ltr"},"alternate":[{"href":"http://dave.cheney.net/2013/06/30/how-to-write-benchmarks-in-go","type":"text/html"}],"author":"Dave Cheney","crawled":1372558648512,"origin":{"streamId":"feed/http://dave.cheney.net/feed","htmlUrl":"http://dave.cheney.net","title":"Dave Cheney"},"published":1372557972000,"summary":{"content":"This post continues a series on the testing package I started a few weeks back. You can read the previous article on writing table driven tests here. You can find the code mentioned below in the https://github.com/davecheney/fib repository. Introduction The Go testing package contains a benchmarking facility that can be used to examine the performance [...]","direction":"ltr"},"title":"How to write benchmarks in Go","unread":true},{"id":"BNU7PBBhwHi0trgjATqXMRVLGGikmyZQMhiBOKF3WjM=_13f59dcd0ef:41f8b:f1c0ed2","fingerprint":"2fc77cae","originId":"http://dave.cheney.net/?p=608","keywords":["Go","Programming","concurrency","race","testing"],"content":{"content":"<p>This is a short post on stress testing your Go packages. Concurrency or memory correctness errors are more likely to show up at higher concurrency levels (higher values of <code>GOMAXPROCS</code>). I use this script when testing my packages, or when reviewing code that goes into the standard library.\n<pre>#!/usr/bin/env bash -e\n\ngo test -c\n# comment above and uncomment below to enable the race builder\n# go test -c -race\nPKG=$(basename $(pwd))\n\nwhile true ; do \n export GOMAXPROCS=$[ 1 + $[ RANDOM % 128 ]]\n ./$PKG.test $@ 2>&amp;1\ndone</pre>\n<p>I keep this script in <code>$HOME/bin</code> so usage is\n<pre>$ cd $SOMEPACKAGE\n$ stress.bash\nPASS\nPASS\nPASS</pre>\n<p>You can pass additional arguments to your test binary on the command line,\n<pre>stress.bash -test.v -test.run=ThisTestOnly</pre>\n<p>The goal is to be able to run the stress test for as long as you want without a test failure. Once you achieve that, uncomment <code>go test -c -race</code> and try again.","direction":"ltr"},"title":"Stress test your Go packages","published":1371599292000,"alternate":[{"href":"http://dave.cheney.net/2013/06/19/stress-test-your-go-packages","type":"text/html"}],"author":"Dave Cheney","crawled":1371602211055,"origin":{"streamId":"feed/http://dave.cheney.net/feed","htmlUrl":"http://dave.cheney.net","title":"Dave Cheney"},"summary":{"content":"This is a short post on stress testing your Go packages. Concurrency or memory correctness errors are more likely to show up at higher concurrency levels (higher values of GOMAXPROCS). I use this script when testing my packages, or when reviewing code that goes into the standard library. #!/usr/bin/env bash -e go test -c # [...]","direction":"ltr"},"unread":true},{"recrawled":1371602211055,"id":"BNU7PBBhwHi0trgjATqXMRVLGGikmyZQMhiBOKF3WjM=_13f52f80b5c:a18618:a7cd00","fingerprint":"ced7c14","originId":"http://dave.cheney.net/?p=526","keywords":["Go","Programming","centos","redhat","unsupported"],"content":{"content":"<p><strong>Important Go 1.0 or 1.1 has never supported RHEL5 or CentOS5. Please do not interpret anything in this article as a statement that Go does support RHEL5 or CentOS5.</strong>\n<hr>\n<h1>Introduction</h1>\n<p>Go has never supported RedHat 5 or CentOS 5. We’ve been pretty good at getting that message out, but it still catches a few people by surprise. The reason these old releases are not supported is the Linux kernel that ships with them, a derivative of 2.6.18, does not provide three facilities required by the Go runtime. \n<p>These are\n<ol>\n<li>Support for the <code>O_CLOEXEC</code> flag passed to <code>open(2)</code>. We attempt to work around this in the <code>os.OpenFile</code> function, but not all kernels that <em>do not</em> support this flag return an error telling us they don’t support it. The result on RHEL5/CentOS5 systems is file descriptors can leak into child processes, this isn’t a big problem, but does cause test failures.\n<li>Support for <code>accept4(2)</code>. <code>accept4(2)</code> was introduced in kernel 2.6.28 to allow <code>O_CLOEXEC</code> to be set on newly accepted socket file descriptors. In the case that this syscall is not supported, we fall back to the older <code>accept(2)</code> syscall at a small performance hit.\n<li>Support for high resolution vDSO <code>clock_gettime(2)</code>. vDSO is a way of projecting a small part of the kernel into your process address space. This means you can call certain syscalls (known as vsyscalls) without the cost of a trap into kernel space or a context switch. Go uses <code>clock_gettime(2)</code> via the vDSO in preference to the older <code>gettimeofday(2)</code> syscall as it is both faster, and higher precision.\n</ol>\n<h1>Installing Go from source</h1>\n<p>As RHEL5/CentOS5 are not supported, there are no binary packages available on the <a href=\"https://golang.org/\">golang.org</a> website. To install Go you will need to use the source tarball, in this case we’re using the Go 1.1.1 release. I’m using a CentOS 5.9 amd64 image running in a vm.\n<h2>Install prerequisites</h2>\n<p>The packages required to build Go on RedHat platforms are listed on the <a href=\"https://code.google.com/p/go-wiki/wiki/InstallFromSource#Install_C_tools\">Go community wiki</a>.\n<pre>$ sudo yum install gcc glibc-devel</pre>\n<h2>Download and unpack</h2>\n<p>We’re going to download the Go 1.1.1 source distribution and unpack it to <code>$HOME/go</code>.\n<pre>$ curl https://go.googlecode.com/files/go1.1.1.src.tar.gz | tar xz\n % Total % Received % Xferd Average Speed Time Time Time Current\n Dload Upload Total Spent Left Speed\n100 8833k 100 8833k 0 0 710k 0 0:00:12 0:00:12 --:--:-- 974k\n$ ls\nDesktop go</pre>\n<h2>Build</h2>\n<pre>$ cd go/src\n$ ./make.bash\n# Building C bootstrap tool.\ncmd/dist\n\n# Building compilers and Go bootstrap tool for host, linux/amd64.\nlib9\nlibbio\n...\nInstalled Go for linux/amd64 in /home/dfc/go\nInstalled commands in /home/dfc/go/bin</pre>\n<h2>Add <code>go</code> to <code>PATH</code></h2>\n<pre>$ export PATH=$PATH:$HOME/go/bin\n$ go version\ngo version go1.1.1 linux/amd64</pre>\n<h1>Known issues</h1>\n<p>As described above, RHEL5/CentOS5 are not supported as their kernel is too old. Here are some of the known issues. As RHEL5/CentOS5 are unsupported, they will not be fixed. \n<h2>Test failures</h2>\n<p>You’ll notice above to build Go I ran <code>make.bash</code>, not the recommended <code>all.bash</code>, to skip the tests. Due to the lack of working <code>O_CLOEXEC</code> support, some tests will fail. This is a known issue and will not be fixed.\n<pre>$ ./run.bash\n...\n--- FAIL: TestExtraFiles (0.05 seconds)\n exec_test.go:302: Something already leaked - closed fd 3\n exec_test.go:359: Run: exit status 1; stdout \"leaked parent file. fd = 10; want 9\\n\", stderr \"\"\nFAIL\nFAIL os/exec 0.489s</pre>\n<h2>Segfaults and crashes due to missing vDSO support</h2>\n<p>A some point during the RHEL5 release cycle support for vDSO vsyscalls was added to RedHat’s 2.6.18 kernel. However that point appears to differ by point release. For example, for RedHat 5, kernel 2.6.18-238.el5 does not work, whereas <a href=\"https://twitter.com/jehiah/status/343162971071070209\">2.6.18-238.19.1.el5 does</a>. Running CentOS 5.9 with kernel 2.6.18.348.el5 does work.\n<pre>$ ./make.bash\n...\ncmd/go\n./make.bash: line 141: 8269 segmentfault \"$GOTOOLDIR\"/go_bootstrap clean -i std</pre>\n<p>In summary, if the your Go programs crash or segfault using RHEL5/CentOS5, you should try upgrading to the latest kernel available for your point release. I’ll leave the comments on this article open for a while so people can contribute their known working kernel versions, perhaps I can build a (partial) table of known good configurations.</hr>","direction":"ltr"},"title":"How to install Go 1.1 on CentOS 5.9","published":1371486466000,"alternate":[{"href":"http://dave.cheney.net/2013/06/18/how-to-install-go-1-1-on-centos-5","type":"text/html"}],"author":"Dave Cheney","crawled":1371486554972,"origin":{"streamId":"feed/http://dave.cheney.net/feed","htmlUrl":"http://dave.cheney.net","title":"Dave Cheney"},"summary":{"content":"Important Go 1.0 or 1.1 has never supported RHEL5 or CentOS5. Please do not interpret anything in this article as a statement that Go does support RHEL5 or CentOS5. Introduction Go has never supported RedHat 5 or CentOS 5. We’ve been pretty good at getting that message out, but it still catches a few people by surprise. [...]","direction":"ltr"},"unread":true}]}
